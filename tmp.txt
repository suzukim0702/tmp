import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.ZoneId;

public class TimestampGenerator {

    // Timestampを受け取って、その月の初日と次の月の初日のTimestampを返すメソッド
    public static Pair<Timestamp, Timestamp> generateTimestamps(Timestamp inputTimestamp) {
        // TimestampからLocalDateに変換
        LocalDate inputDate = inputTimestamp.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();

        // 月の初日の0時を取得
        LocalDate firstDayOfMonth = inputDate.withDayOfMonth(1);
        Timestamp firstDayTimestamp = Timestamp.valueOf(firstDayOfMonth.atStartOfDay());

        // 次の月の初日の0時を取得
        LocalDate firstDayOfNextMonth = firstDayOfMonth.plusMonths(1);
        Timestamp firstDayOfNextMonthTimestamp = Timestamp.valueOf(firstDayOfNextMonth.atStartOfDay());

        // 2つのTimestampをPairとして返す
        return new Pair<>(firstDayTimestamp, firstDayOfNextMonthTimestamp);
    }

    // テスト用のメインメソッド
    public static void main(String[] args) {
        // 現在のTimestampを使用
        Timestamp now = new Timestamp(System.currentTimeMillis());

        Pair<Timestamp, Timestamp> timestamps = generateTimestamps(now);

        System.out.println("月の初日の0時: " + timestamps.getFirst());
        System.out.println("次の月の初日の0時: " + timestamps.getSecond());
    }
}

// シンプルなPairクラス
class Pair<T, U> {
    private final T first;
    private final U second;

    public Pair(T first, U second) {
        this.first = first;
        this.second = second;
    }

    public T getFirst() {
        return first;
    }

    public U getSecond() {
        return second;
    }
}
